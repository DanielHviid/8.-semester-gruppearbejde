ProjectLocation <- 'D:/Smartgit/8.-semester-gruppearbejde/MachineLearning/Aflevering_2/'
folder <- "D:/SmartSVN/trunk/2018/group"
#load relevant functions
source(paste(ProjectLocation, 'loadImage.R', sep=""))
source(paste(ProjectLocation, 'functions.R', sep=""))
ProjectLocation <- 'D:/Smartgit/8.-semester-gruppearbejde/MachineLearning/Aflevering_2/'
folder <- "D:/SmartSVN/trunk/2018/group"
#load relevant functions
source(paste(ProjectLocation, 'includes.R', sep=""))
source(paste(ProjectLocation, 'functions.R', sep=""))
?readJPEG
library("lda")
?lda
?neuralnet
??neuralnet
install.packages("neuralnet", dependencies = TRUE)
library("neuralnet")
?neuralnet
members = List(List(1))
members = list(list(1))
folder <- "D:/SmartSVN/trunk/preProcessed/2018/group"
participants = list(list(1))
id100Small <- getAllData(participants)
id100Small
# Smoothing example code, this can be included in your code and will change the code so remember to
# load the images again, ( A nice feature of R )
smoothImage <- function(grayImg){ # This function is run in loadSinglePersonsData check the code
kernel <- makeBrush(9, shape='Gaussian', step=TRUE, sigma=1.8) # There exist a number of different functions
#print(kernel) # just to show what we have made
smoothed <- filter2(grayImg, kernel) # filter the image using the kernel
return(smoothed)
}
id100Small <- getAllData(participants)
# Example code for reading all images into a list, DPI 100
getAllData <- function(dataList, DPI){
id <- data.frame()
idList <- list()
for(i in 1:length(dataList))
{
if( length(dataList[[i]]) > 0  ){
for(j in 1:length(dataList[[i]])){
idTemp <- loadSinglePersonsData(DPI,i - 1,j,folder)
idList <- append(idList, list(idTemp))
}
}
}
return(idList)
}
id100Small <- getAllData(participants, 100)
id100Small
id100Small <- data.frame(getAllData(participants, 100))
id100Small
subjectsSmall = list(list(), list(), list(1,2,3))
subjectsLarge = list(list(1), list(1,2), list(1,2,3), list(1,2,3), list(1,2,3,4), list(1,2,3,4,5), list(0,1))
id100Small <- data.frame(getAllData(subjectsSmall, 100))
install.packages("foreach")
install.packages("foreach")
library(foreach)
# Example code for reading all images into a list, DPI 100
getAllData <- function(dataList, DPI){
id <- data.frame()
idList <- list()
# foreach(i=1:10) %dopar% {
#
#   #loop contents here
#
# }
for(i in 1:length(dataList))
{
if( length(dataList[[i]]) > 0  ){
for(j in 1:length(dataList[[i]])){
cat("i: ", i, "j: ", j, "\n")
idTemp <- loadSinglePersonsData(DPI,i - 1,j,folder)
idList <- append(idList, list(idTemp))
}
}
}
return(idList)
}
id100Small <- data.frame(getAllData(subjectsSmall, 100))
ProjectLocation <- 'D:/Smartgit/8.-semester-gruppearbejde/MachineLearning/Aflevering_2/'
folder <- "D:/SmartSVN/trunk/preProcessed/2018/group"
#load relevant functions
source(paste(ProjectLocation, 'includes.R', sep=""))
source(paste(ProjectLocation, 'functions.R', sep=""))
id100Small <- data.frame(getAllData(subjectsSmall, 100))
subjectsSmall = list(list(), list(), list(1,2,3))
subjectsLarge = list(list(1), list(1,2), list(1,2,3), list(1,2,3), list(1,2,3,4), list(1,2,3,4,5), list(0,1))
id100Small <- data.frame(getAllData(subjectsSmall, 100))
subjectsSmall = list(list(1), list(1), list(1))
id100Small <- data.frame(getAllData(subjectsSmall, 100))
id200Small <- data.frame(getAllData(subjectsSmall, 200))
id300Small <- data.frame(getAllData(subjectsSmall, 300))
id300Small <- data.frame(getAllData(subjectsSmall, 300))
id100Small <- data.frame(getAllData(subjectsSmall, 100))
View(id100Small)
View(id100Small)
# code for reading all images into a list
getAllData <- function(dataList, DPI){
id <- data.frame()
idList <- list()
# foreach(i=1:10) %dopar% {
#
#   #loop contents here
#
# }
for(i in 1:length(dataList))
{
if( length(dataList[[i]]) > 0  ){
for(j in 1:length(dataList[[i]])){
cat("i: ", i, "j: ", j, "\n")
idTemp <- loadSinglePersonsData(DPI,i - 1,j,folder)
idList <- rbinde(idList, list(idTemp))
}
}
}
idList <- data.frame(idList)
return(idList)
}
id100Small <- data.frame(getAllData(subjectsSmall, 100))
# code for reading all images into a list
getAllData <- function(dataList, DPI){
id <- data.frame()
idList <- list()
# foreach(i=1:10) %dopar% {
#
#   #loop contents here
#
# }
for(i in 1:length(dataList))
{
if( length(dataList[[i]]) > 0  ){
for(j in 1:length(dataList[[i]])){
cat("i: ", i, "j: ", j, "\n")
idTemp <- loadSinglePersonsData(DPI,i - 1,j,folder)
idList <- rbind(idList, list(idTemp))
}
}
}
idList <- data.frame(idList)
return(idList)
}
id100Small <- data.frame(getAllData(subjectsSmall, 100))
# code for reading all images into a list
getAllData <- function(dataList, DPI){
id <- data.frame()
idList <- data.frame()
# foreach(i=1:10) %dopar% {
#
#   #loop contents here
#
# }
for(i in 1:length(dataList))
{
if( length(dataList[[i]]) > 0  ){
for(j in 1:length(dataList[[i]])){
cat("i: ", i, "j: ", j, "\n")
idTemp <- loadSinglePersonsData(DPI,i - 1,j,folder)
idList <- rbind(idList, list(idTemp))
}
}
}
idList <- data.frame(idList)
return(idList)
}
id100Small <- data.frame(getAllData(subjectsSmall, 100))
# code for reading all images into a list
getAllData <- function(dataList, DPI){
id <- data.frame()
idList <- list()
# foreach(i=1:10) %dopar% {
#
#   #loop contents here
#
# }
for(i in 1:length(dataList))
{
if( length(dataList[[i]]) > 0  ){
for(j in 1:length(dataList[[i]])){
cat("i: ", i, "j: ", j, "\n")
idTemp <- loadSinglePersonsData(DPI,i - 1,j,folder)
idList <- append(idList, list(idTemp))
}
}
}
id <- list()
for(i in 1:length(idList)){
id <- rbind(id, data.frame( idList[i]))
}
return(id)
}
id100Small <- data.frame(getAllData(subjectsSmall, 100))
id200Small <- data.frame(getAllData(subjectsSmall, 200))
id300Small <- data.frame(getAllData(subjectsSmall, 300))
id300Large <- data.frame(getAllData(subjectsLarge, 300))
setwd(ProjectLocation)
write.csv(id100Small, file = "DataFrames/id100Small.csv")
save(id100Small,file ="id100Small.Rda")
load("id100Small.Rda")
load("id100Small.Rda")
id100Small <- data.frame(getAllData(subjectsSmall, 100))
id100Large <- data.frame(getAllData(subjectsLarge, 100))
id200Small <- data.frame(getAllData(subjectsSmall, 200))
id200Large <- data.frame(getAllData(subjectsLarge, 200))
id300Small <- data.frame(getAllData(subjectsSmall, 300))
id300Large <- data.frame(getAllData(subjectsLarge, 300))
#load relevant functions
source(paste(ProjectLocation, 'includes.R', sep=""))
#load relevant functions
source('includes.R')
source('functions.R')
save(id100Small,file ="id100Small.Rda")
#load dataset
source('loadImages.R')
folder <- "D:/SmartSVN/trunk/preProcessed/2018/group"
#load dataset
source('loadImages.R')
#load dataset
source('loadImages.R')
# load dataset and safe it in a data file for reuse
subjectsSmall = list(list(1), list(1), list(1))
subjectsLarge = list(list(1), list(1,2), list(1,2,3), list(1,2,3), list(1,2,3,4), list(1,2,3,4,5), list(0,2))
#load data
id100Small <- data.frame(getAllData(subjectsSmall, 100))
id100Large <- data.frame(getAllData(subjectsLarge, 100))
subjectsLarge = list(list(1), list(1,2), list(1,2,3), list(1,2,3), list(1,2,3,4), list(2,3,4,5), list(0,2))
id100Large <- data.frame(getAllData(subjectsLarge, 100))
subjectsLarge
subjectsLarge(1)
subjectsLarge[1]
subjectsLarge[[1]
]
subjectsLarge[[1]]
length(subjectsLarge[[1]])
subjectsLarge = list(list(1), list(1,2), list(1,2,3), list(1,2,3), list(1,2,3,4), list(1,2,3,4,5), list(), list(1), list(1))
id100Large <- data.frame(getAllData(subjectsLarge, 100))
#load dataset
source('loadImages.R')
#load dataset
source('convertImages.R')
source('Opgave3_2.R')
source('Opgave3_2.R')source(paste(ProjectLocation, 'Opgave3_3.R', sep=""))
?predict
prcomp(id100Small)
res <- prcomp(id100Small)
summary(res)
summary(prcomp(id100Small, scale = TRUE))
# giver Ã¥benbart et andet resultat
summary(prcomp(id200Small, scale = TRUE))
View(loadSinglePersonsData)
